name: Deploy to Cloud Run

env:
  SERVICE_NAME: custom-fastapi-service
  PROJECT_ID: pkdeltaai-06
  DOCKER_IMAGE_URL: us-central1-docker.pkg.dev/pkdeltaai-06/cloudrun-githubaction/custom-fastapi

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  dockerize-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Google Cloud Auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          project_id: ${{ env.PROJECT_ID }}

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Configure Docker
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Create Artifact Registry Repository
        run: |
          if ! gcloud artifacts repositories describe cloudrun-githubaction --location=us-central1 --project=${{ env.PROJECT_ID }}; then
            gcloud artifacts repositories create cloudrun-githubaction \
              --repository-format=docker \
              --location=us-central1 \
              --project=${{ env.PROJECT_ID }}
          else
            echo "Repository already exists"
          fi

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE_URL }}:latest -f Dockerfile.prod .
          docker push ${{ env.DOCKER_IMAGE_URL }}:latest

      - name: Deploy to Cloud Run
        run: |
          echo SERVICE_NAME $SERVICE_NAME
          gcloud run deploy $SERVICE_NAME \
            --image ${{ env.DOCKER_IMAGE_URL }}:latest \
            --platform managed \
            --region us-east1 \
            --allow-unauthenticated


      - name: Install gcloud-artifact-registry
        run: pip install google-cloud-artifact-registry

      - name: Set default region
        run: gcloud config set compute/region us-central1

      - name: List and Delete Images
        run: |




          # List all images in the repository
          images=$(gcloud artifacts docker images list     us-central1-docker.pkg.dev/pkdeltaai-06/cloudrun-githubaction --format="json)

          # Parse the JSON output to extract image names
          image_names=$(echo "$images" | jq -r '.[].name')

          # Sort images by creation time (descending)
          sorted_images=$(echo "$image_names" | jq -r '. | sort_by(. | split("/")[-1] | tonumber) | reverse[]')

          # Delete all images except the latest
          for image in $sorted_images; do
            if [[ "$image" != "$sorted_images[0]" ]]; then
              gcloud artifactregistry images delete "$image" --project=$project_id --repository=$repository_name
              echo "Deleted image: $image"
            fi
          done
 

